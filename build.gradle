apply plugin: 'java'
apply plugin: 'maven'

group = 'org.scenic-view'
version = '8.0'

defaultTasks 'install'

repositories {
    mavenLocal()
}

configurations {
    jdk
    binTray
}

dependencies {
    jdk files("${System.properties['java.home']}/../lib/tools.jar")
    try {
        jdk files(svJFXRTJar)
    } catch (MissingPropertyException pne) {
        jdk files("${System.properties['java.home']}/lib/ext/jfxrt.jar")
    }
}

sourceSets {
    main {
        java {
            srcDir 'src'
            include '**/*.java'
            exclude 'deploy/**'
        }
        resources {
            srcDir 'src'
            exclude '**/*.java'
            exclude 'deploy/**'
        }
        compileClasspath += configurations.jdk
    }
}

jar {
    manifest {
        attributes(
            'Main-Class': 'org.scenicview.utils.ScenicViewBooter',      /* Used for standalone Scenic View */
            'Agent-Class': 'org.fxconnector.remote.RuntimeAttach',      /* But the standalone Scenic View starts up this agent when in runtime attach mode */
            'Premain-Class': 'org.fxconnector.remote.RuntimeAttach'     /* Alternatively, this will be called if Scenic View is started as an agent */
        )
    }
}

artifacts {
    archives(jar)
}

uploadArchives() {
    repositories {
        mavenDeployer {
            repository(url: bintray_api_base_url + '/maven/' + bintray_orgname + '/' + bintray_repo + '/' + bintray_package + '/',
                    id: 'bintray'
            ) {
                try {
                    authentication(
                            userName: bintray_username,
                            password: bintray_api_key
                    )
                } catch (MissingPropertyException pne) {
                    // ignore, don't authenticate
                }
            }
        }
    }
}
