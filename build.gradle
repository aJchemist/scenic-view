import groovyx.net.http.HTTPBuilder

import static groovyx.net.http.ContentType.JSON
import static groovyx.net.http.Method.GET
import static groovyx.net.http.Method.POST

buildscript {
    repositories {
        mavenRepo(url: 'http://dl.bintray.com/content/bintray/jcenter')
    }
    dependencies {
        classpath 'org.codehaus.groovy.modules.http-builder:http-builder:0.6'
        classpath 'commons-collections:commons-collections:3.2.1'
    }
}

apply plugin: 'java'
apply plugin: 'maven'

group = 'org.scenic-view'
version = '8.0-dp3'

repositories {
    mavenLocal()
}

configurations {
    jdk
    provided
}

dependencies {
    jdk files("${System.properties['java.home']}/../lib/tools.jar")
    jdk files("${System.properties['java.home']}/lib/ext/jfxrt.jar")
    provided "org.fxconnector:fxconnector:$version"
}

sourceSets {
    main {
        java {
            srcDir 'src'
            include '**/*.java'
        }
        resources {
            srcDir 'src'
            exclude '**/*.java'
        }
        compileClasspath += configurations.jdk
        compileClasspath += configurations.provided
    }
}

jar {
    from configurations.provided.collect { it.isDirectory() ? it : zipTree(it) }
    manifest {
        attributes(
            'Main-Class': 'org.scenicview.utils.ScenicViewBooter',
            'Agent-Class': 'org.fxconnector.remote.AgentTest',
            'Premain-Class': 'org.scenicview.utils.SVInstrumentationAgent'
        )
    }
}

task createBintrayPackage << {
    def http = getHttpBuilder()
    http.request(GET, JSON) {
        uri.path = '/packages/' + bintray_orgname + '/' + bintray_repo + '/' + bintray_package
        response.'404' = {
            http = getHttpBuilder()
            http.request(POST, JSON) {
                uri.path = '/packages/' + bintray_orgname + '/' + bintray_repo
                body = [name: bintray_package, desc: 'auto', desc_url: 'auto', labels: ['JavaFX']]

                response.success = { resp ->
                    println 'Created!!!'
                }
            }
        }
    }
}

uploadArchives() {
    repositories {
        ivy {
            url = bintray_api_base_url + '/content/' + bintray_orgname + '/' + bintray_repo + '/' + bintray_package + '/' + version
            credentials {
                username bintray_username
                password bintray_api_key
            }
        }
    }
}

uploadArchives.dependsOn createBintrayPackage

def getHttpBuilder() {
    def http = new HTTPBuilder(bintray_api_base_url)
    http.auth.basic bintray_username, bintray_api_key
    return http
}